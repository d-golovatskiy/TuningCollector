AffectExceptionController предоставляет запросы:
–	GET /v1/affectException?task_id&sys_id&affect_exc_id. Запрос позволяет получить информацию об исключениях в схеме воздействия. Это может быть полезно, если нам необходимо не обращать внимания на воздействие какой-то системе при фильтрации мониторинговых данных. Передаваемые параметры необязательны и служат в качестве фильтров. В результате получаем список исключений в формате JSON. Поля записей соответствуют разметке сущности в БД;
–	POST /v1/affectException. Запрос предназначен для ввода в систему нового исключения. В тело запроса помещается запись с полями, соответствующими этой сущности полями. В результате переданная запись помещается в БД;
–	PATCH /v1/affectException. Запрос предназначен для изменения существующей записи в БД. В тело помещается запись соответствующей сущности;
–	DELETE /v1/affectException?id. Запрос предназначен для удаления записи об исключении. Единственный параметр, представляющий собой идентификатор записи, обязателен.
AffectSchemeController предоставляет запросы:
–	GET /v1/affectScheme?affected_id&affecting_id&affect_scheme_id. Запрос позволяет получить информацию о схеме воздействия систем друг на друга. Передаваемые параметры необязательны и служат в качестве фильтров. В результате получаем список записей схемы в формате JSON. Поля записей соответствуют разметке сущности в БД;
–	POST /v1/affectScheme. Запрос предназначен для ввода в систему новой записи в схему воздействия. В тело запроса помещается запись с полями, соответствующими этой сущности полями. В результате переданная запись помещается в БД;
–	PATCH /v1/affectScheme. Запрос предназначен для изменения существующей записи в БД. В тело помещается запись соответствующей сущности;
–	DELETE /v1/affectScheme?id. Запрос предназначен для удаления записи. Единственный параметр, представляющий собой идентификатор записи, обязателен.
AlarmController предоставляет запросы:
–	GET /v1/alarms?alarm_id&dateStart&dateEnd&sys_id. Запрос позволяет получить информацию об аварийных оповещениях. Передаваемые параметры необязательны и служат в качестве фильтров. В результате получаем список аварийных оповещений в формате JSON. Поля записей соответствуют разметке сущности в БД;
–	POST /v1/alarms. Запрос предназначен для ввода в систему нового аварийного оповещения. В тело запроса помещается запись с полями, соответствующими этой сущности полями. В результате переданная запись помещается в БД;
–	PATCH /v1/alarms. Запрос предназначен для изменения существующей записи в БД. В тело помещается запись соответствующей сущности;
–	DELETE /v1/affectScheme?id. Запрос предназначен для удаления записи. Единственный параметр, представляющий собой идентификатор записи, обязателен.
MeasurementsController предоставляет запросы:
–	GET /v1/meas?id. Запрос позволяет получить информацию о доступных метриках целевой системы. Передаваемый параметр необязателен и служит в качестве фильтра. В результате получаем список метрик в формате JSON. Поля записей соответствуют разметке сущности в БД;
–	POST /v1/meas. Запрос предназначен для ввода в систему нового аварийного оповещения. В тело запроса помещается запись с полями, соответствующими этой сущности полями. В результате переданная запись помещается в БД;
–	PATCH /v1/meas. Запрос предназначен для изменения существующей записи в БД. В тело помещается запись соответствующей сущности;
–	DELETE /v1/meas?id. Запрос предназначен для удаления записи. Единственный параметр, представляющий собой идентификатор записи, обязателен.
SysController предоставляет запросы:
–	GET /v1/sys?id&name. Запрос позволяет получить информацию о доступных системах контура. Передаваемые параметры необязательны и служат в качестве фильтра. В результате получаем список систем в формате JSON. Поля записей соответствуют разметке сущности в БД;
–	POST /v1/sys. Запрос предназначен для ввода в систему нового аварийного оповещения. В тело запроса помещается запись с полями, соответствующими этой сущности полями. В результате переданная запись помещается в БД;
–	PATCH /v1/sys. Запрос предназначен для изменения существующей записи в БД. В тело помещается запись соответствующей сущности;
–	DELETE /v1/sys?id. Запрос предназначен для удаления записи. Единственный параметр, представляющий собой идентификатор записи, обязателен.
SysMeasController предоставляет запросы:
–	GET /v1/ sysMeas?id. Запрос позволяет получить информацию о соответствии метрик системам. Передаваемый параметр необязателен и служит в качестве фильтра. В результате получаем список записей в формате JSON. Поля записей соответствуют разметке сущности в БД;
–	POST /v1/ sysMeas. Запрос предназначен для ввода в систему нового аварийного оповещения. В тело запроса помещается запись с полями, соответствующими этой сущности полями. В результате переданная запись помещается в БД;
–	PATCH /v1/ sysMeas. Запрос предназначен для изменения существующей записи в БД. В тело помещается запись соответствующей сущности;
–	DELETE /v1/ sysMeas?id. Запрос предназначен для удаления записи. Единственный параметр, представляющий собой идентификатор записи, обязателен.
TaskToCollectController предоставляет запросы:
–	GET /v1/taskToCollect?id&name&dateStart&dateEnd. Запрос позволяет получить информацию текущих задачах на сбор мониторинговых данных. Передаваемые параметры необязательны и служат в качестве фильтра. В результате получаем список записей в формате JSON. Поля записей соответствуют разметке сущности в БД;
–	POST /v1/taskToCollect. Запрос предназначен для ввода в систему нового аварийного оповещения. В тело запроса помещается запись с полями, соответствующими этой сущности полями. В результате переданная запись помещается в БД;
–	PATCH /v1/taskToCollect. Запрос предназначен для изменения существующей записи в БД. В тело помещается запись соответствующей сущности. Основным применением запроса является отправка задачи на обработку за счет изменения статуса задачи с created на started;
–	DELETE /v1/taskToCollect?id. Запрос предназначен для удаления записи. Единственный параметр, представляющий собой идентификатор записи, обязателен.
Выше описаны контроллеры модуля Manager. У модуля Collector есть только один контроллер – TaskToCollect. У него описана обработка только одного запроса – запроса на сбор данных: POST /v1/taskToCollect. В его теле находится описание задачи на сбор данных в виде соответствующей сущности в БД (формат JSON). При его обработке задача помещается во внутреннюю очередь обработки и в ее конце отправляется запрос в Manager, в котором передается собранная выборка.
